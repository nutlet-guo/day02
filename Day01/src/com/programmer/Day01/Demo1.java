package com.programmer.Day01;

public class Demo1 {
    // 变量和常量  运算符
	/*
	 * 1.类中定义变量
	 * 数据类型 变量 = 值;  定义变量并赋值
	 * 数据类型 变量;
	 * 变量 = 值;
	 * 变量就是一个可以改变的量
	 * 变量是在栈内存空间中,开辟一个大小和数据类型一致的空间
	 * 这个空间存储的值是可以改变的
	 * 
	 * 全局变量作用域比局部变量大
	 * 
	 * 数据类型 : byte short int long double float char boolean
	 * 变量--> 变量名 --> 标识符(字母数字下划线组成,但是不能以数字开头)
	 * 整数: byte short int long
	 * 小数: double float
	 * 字符: char   --> 一个字符   'a'  不可以这样 'ab'
	 * 布尔类型: boolean  --> true / false
	 * 
	 * 同样内存大小的情况下:浮点型比整数存储的多 
	 * 
	 * 数据类型转换问题
	 * 小范围存储的数据赋值给大范围的 --> 自动类型转换
	 * 小数是可以存储整数的
	 * 
	 * 将大范围的数据存储到小范围中 --> 强制类型转换
	 * 整数是不可以存储小数的
	 * 
	 * 常量
	 * 不可变的量  
	 * 字面常量: 1,1.23,"小明"
	 * 
	 * 声明常量 final 修饰变量即为常量
	 * 
	 * 运算符:
	 * 算数运算符 + - *  /  %
	 * 整数除以整数 只能的到整数     除数不能为0 
	 *  / 除号不能用来判断整除    整除的话  %
     *  变量和常量  和运算符 组成表达式进行计算
     *  赋值运算符   =
     *  关系运算符 >  >=  < <=  == !=    --> 写逻辑  只能得到boolean的值
     *  逻辑运算符  && || !  --> 写逻辑  和关系一起使用 只能得到boolean的值
     *  && --> 只有所有条件为真,才为真
     *  || --> 只要有一个条件为真,即为真
     *  ! --> 取反  !真 --> 假    !假-->真
     * 算数运算符 
     *  ++   会自身+1
     *  int  a = 1
     *   a ++   运算符 是在变量的后面 先计算变量然后在进行自身+1操作
     *   sysout(a)  --> 2
     *  int b = a++;
     *  ------------------------------------------------------------
     *  int a = 1
     *   ++a    运算符是在变量走之前 先进行自身+1操作 ,然后在计算变量
     *   sysout(a) --> 2
     *   
     *    sysout(b)  1         
     *  --   会自身-1  同理
     *  
     *  
     *      
 	 * 
	 * 
	 * 
	 * 
	 */
	  int a = 10; //全局
	public static void main(String[] args) {
		 int b = 20;//局部
		 
		 //自动类型转换
		 byte b1 = 20;
		 int i1 = b1;
		 //强制类型转换
		 byte b2 = (byte)i1;
		 //常量被赋值是不可以修改的
		 final int i2 = 20;
		 //i2 = 30;
		 
		 int i3 = 1;
		 int i4 = i3++;  //先将i3的值赋值i4 然后 i3+1在进行运算
		 System.out.println(i4);
		 
		 int i5 = 1;
		 int i6 = ++i5;//先执行i5+1 在将 i5+1的值赋值给i6
		 System.out.println(i6); //2
		 
		 
	}
	
	
	
	
	
	
	
	
	
	
	
}
